name: ci

on: [pull_request]

jobs:
  lint-title:
    runs-on: ubuntu-latest
    name: 🚨 Lint Pull Request title
    steps:
      - uses: amannn/action-semantic-pull-request@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  install-deps:
    runs-on: ubuntu-latest
    name: 📦 Install dependencies
    steps:
      - name: 🔑 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: ♻️ Cache node_modules
        uses: actions/cache@v4
        id: bun-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-node-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-node-

        if: steps.bun-cache.outputs.cache-hit != 'true'
      - run: bun install --frozen-lockfile

  lint-package:
    runs-on: ubuntu-latest
    name: 🚨 Check for errors
    needs: install-deps
    steps:
      - name: 🔑 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: ♻️ Restore node_modules
        uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-node-${{ hashFiles('**/bun.lockb') }}

      - name: ♻️ Restore ESLint Cache
        uses: actions/cache@v4
        id: eslint-cache
        with:
          path: .eslintcache
          key: ${{ matrix.os }}-eslint-${{ hashFiles('**/*.ts', 'package.json', 'tsconfig.json') }}

      - name: 📦 Install dependencies
        if: steps.bun-cache.outputs.cache-hit != 'true'
        run: bun install --frozen-lockfile

      - name: 🚨 Lint files
        run: bun run lint

  tests:
    name: 🧪 Test package
    runs-on: ubuntu-latest
    needs: install-deps
    steps:
      - name: 🔑 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: ♻️ Restore node_modules
        uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-node-${{ hashFiles('**/bun.lockb') }}

      - name: 📦 Install dependencies
        if: steps.bun-cache.outputs.cache-hit != 'true'
        run: bun install --frozen-lockfile

      - name: 🧪 Run tests
        run: bun run test:ci

      - name: ⬆️ Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build:
    name: 🏗️ Build package
    runs-on: ubuntu-latest
    needs: install-deps
    steps:
      - name: 🔑 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: ♻️ Load node_modules
        uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-node-${{ hashFiles('**/bun.lockb') }}

      - name: 📦 Install dependencies
        if: steps.bun-cache.outputs.cache-hit != 'true'
        run: bun install --frozen-lockfile

      - name: 🏗️ Build package
        run: bun run build
